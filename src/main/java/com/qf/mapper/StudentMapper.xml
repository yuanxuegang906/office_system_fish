<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qf.mapper.StudentMapper">
  <resultMap id="BaseResultMap" type="com.qf.pojo.Student">
    <id column="sid" jdbcType="INTEGER" property="sid" />
    <result column="sname" jdbcType="VARCHAR" property="sname" />
    <result column="ssex" jdbcType="VARCHAR" property="ssex" />
    <result column="sage" jdbcType="INTEGER" property="sage" />
    <result column="classname" jdbcType="VARCHAR" property="classname" />
    <result column="firststage" jdbcType="INTEGER" property="firststage" />
    <result column="secondstage" jdbcType="INTEGER" property="secondstage" />
    <result column="thirdstage" jdbcType="INTEGER" property="thirdstage" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    sid, sname, ssex, sage, classname, firststage, secondstage, thirdstage, state, username, 
    password
  </sql>
  <select id="selectByExample" parameterType="com.qf.pojo.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where sid = #{sid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student
    where sid = #{sid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qf.pojo.StudentExample">
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qf.pojo.Student">
    insert into student (sid, sname, ssex, 
      sage, classname, firststage, 
      secondstage, thirdstage, state, 
      username, password)
    values (#{sid,jdbcType=INTEGER}, #{sname,jdbcType=VARCHAR}, #{ssex,jdbcType=VARCHAR}, 
      #{sage,jdbcType=INTEGER}, #{classname,jdbcType=VARCHAR}, #{firststage,jdbcType=INTEGER}, 
      #{secondstage,jdbcType=INTEGER}, #{thirdstage,jdbcType=INTEGER}, #{state,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qf.pojo.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sid != null">
        sid,
      </if>
      <if test="sname != null">
        sname,
      </if>
      <if test="ssex != null">
        ssex,
      </if>
      <if test="sage != null">
        sage,
      </if>
      <if test="classname != null">
        classname,
      </if>
      <if test="firststage != null">
        firststage,
      </if>
      <if test="secondstage != null">
        secondstage,
      </if>
      <if test="thirdstage != null">
        thirdstage,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sid != null">
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="sname != null">
        #{sname,jdbcType=VARCHAR},
      </if>
      <if test="ssex != null">
        #{ssex,jdbcType=VARCHAR},
      </if>
      <if test="sage != null">
        #{sage,jdbcType=INTEGER},
      </if>
      <if test="classname != null">
        #{classname,jdbcType=VARCHAR},
      </if>
      <if test="firststage != null">
        #{firststage,jdbcType=INTEGER},
      </if>
      <if test="secondstage != null">
        #{secondstage,jdbcType=INTEGER},
      </if>
      <if test="thirdstage != null">
        #{thirdstage,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qf.pojo.StudentExample" resultType="java.lang.Long">
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student
    <set>
      <if test="record.sid != null">
        sid = #{record.sid,jdbcType=INTEGER},
      </if>
      <if test="record.sname != null">
        sname = #{record.sname,jdbcType=VARCHAR},
      </if>
      <if test="record.ssex != null">
        ssex = #{record.ssex,jdbcType=VARCHAR},
      </if>
      <if test="record.sage != null">
        sage = #{record.sage,jdbcType=INTEGER},
      </if>
      <if test="record.classname != null">
        classname = #{record.classname,jdbcType=VARCHAR},
      </if>
      <if test="record.firststage != null">
        firststage = #{record.firststage,jdbcType=INTEGER},
      </if>
      <if test="record.secondstage != null">
        secondstage = #{record.secondstage,jdbcType=INTEGER},
      </if>
      <if test="record.thirdstage != null">
        thirdstage = #{record.thirdstage,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student
    set sid = #{record.sid,jdbcType=INTEGER},
      sname = #{record.sname,jdbcType=VARCHAR},
      ssex = #{record.ssex,jdbcType=VARCHAR},
      sage = #{record.sage,jdbcType=INTEGER},
      classname = #{record.classname,jdbcType=VARCHAR},
      firststage = #{record.firststage,jdbcType=INTEGER},
      secondstage = #{record.secondstage,jdbcType=INTEGER},
      thirdstage = #{record.thirdstage,jdbcType=INTEGER},
      state = #{record.state,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qf.pojo.Student">
    update student
    <set>
      <if test="sname != null">
        sname = #{sname,jdbcType=VARCHAR},
      </if>
      <if test="ssex != null">
        ssex = #{ssex,jdbcType=VARCHAR},
      </if>
      <if test="sage != null">
        sage = #{sage,jdbcType=INTEGER},
      </if>
      <if test="classname != null">
        classname = #{classname,jdbcType=VARCHAR},
      </if>
      <if test="firststage != null">
        firststage = #{firststage,jdbcType=INTEGER},
      </if>
      <if test="secondstage != null">
        secondstage = #{secondstage,jdbcType=INTEGER},
      </if>
      <if test="thirdstage != null">
        thirdstage = #{thirdstage,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
    </set>
    where sid = #{sid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qf.pojo.Student">
    update student
    set sname = #{sname,jdbcType=VARCHAR},
      ssex = #{ssex,jdbcType=VARCHAR},
      sage = #{sage,jdbcType=INTEGER},
      classname = #{classname,jdbcType=VARCHAR},
      firststage = #{firststage,jdbcType=INTEGER},
      secondstage = #{secondstage,jdbcType=INTEGER},
      thirdstage = #{thirdstage,jdbcType=INTEGER},
      state = #{state,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR}
    where sid = #{sid,jdbcType=INTEGER}
  </update>
  <select id="getPassword" parameterType="string" resultType="string">
    select password from student where username = #{username};
  </select>
  <select id="getStudent" parameterType="string" resultType="student">
    select * from student where username = #{username};
  </select>
  <select id="selectStudentByName" resultType="student" parameterType="string">
    select * from student where sname like #{name};
  </select>
</mapper>